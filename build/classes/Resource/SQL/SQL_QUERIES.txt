CREATE TABLE RMOS (RMOSID VARCHAR(50) NOT NULL, PRIMARY KEY(RMOSID));

CREATE TABLE RMOS (RMOSID VARCHAR(50) NOT NULL, PRIMARY KEY(RMOSID));

// updated this query
CREATE TABLE RCMRecycle(RCMNUM INT(50) NOT NULL,RCMID VARCHAR(50) NOT NULL,RMOSID VARCHAR(50) NOT NULL, LOCATION VARCHAR (50), 
STATUS VARCHAR (50),CURRENT_WEIGHT DOUBLE(50,2), TRANSACTION_WEIGHT DOUBLE(50,2), MONTHLYWEIGHT DOUBLE(50,2), AVAILABLE_CASH DOUBLE(50,2), AVAILABLE_COUPON DOUBLE(50,2), LAST_EMPTIED DATE,TRANSACTION_DATE DATE,TRANSACTION_AMOUNT DOUBLE(50,2), PRIMARY KEY(RCMID),FOREIGN KEY (RMOSID) REFERENCES RMOS (RMOSID));

// updated this query
CREATE TABLE RECYCLEITEM(ITEMID INT(50) NOT NULL,  ITEMTYPE VARCHAR (50), ITEM_WEIGHT FLOAT(50),
ITEM_UNIT_WEIGHT FLOAT(50), UNIT_PRICE FLOAT(50));

CREATE TABLE LOGIN(USERID VARCHAR(50) NOT NULL, PASSWORD VARCHAR(50) NOT NULL, PRIMARY KEY(USERID));

SELECT RMOSID FROM RMOS;  

SELECT RCMNUM, RCMID, RMOSID, LOCATION, STATUS, CURRENT_WEIGHT, TRANSACTION_WEIGHT, AVAILABLE_CASH, AVAILABLE_COUPON, LAST_EMPTIED FROM RCMRecycle; 

SELECT RECYCLEITEM, ITEMNANE, ITEMTYPE, ITEM_WEIGHT,ITEM_UNIT_WEIGHT, UNIT_PRICE FROM  ;

SELECT CURRENT_WEIGHT FROM RCMRECYCLE WHERE RCMID = rcmId;

SELECT AVAILABLE_CASH  FROM RCMRECYCLE WHERE RCMID = rcmId;

SELECT AVAILABLE_COUPON FROM RCMRECYCLE WHERE RCMID = rcmId;

SELECT STATUS FROM RCMRECYCLE WHERE RCMID = rcmId;

SELECT LAST_EMPTIED FROM RCMRECYCLE WHERE RCMID = rcmId;

SELECT COUNT(TRANSACTION_DATE) AS MONTHLY_TRANSACTION FROM RCMRECYCLE WHERE RCMID ="
+ rcmId +" AND Month(Start_Date) = Month(getdate()) AND Month(End_Date) = Month(getdate())";

SELECT SUM(TRANSACTION_AMOUNT) AS MONTHLY_CASH_DEBITED FROM RCMRECYCLE WHERE RCMID ="
+ rcmId +" AND Month(Start_Date) = Month(getdate()) AND Month(End_Date) = Month(getdate())";

SELECT SUM(TRANSACTION_WEIGHT) AS MONTHLY_ACCUMULATED_WEIGHT FROM RCMRECYCLE WHERE RCMID ="
+ rcmId +" AND Month(Start_Date) = Month(getdate()) AND Month(End_Date) = Month(getdate())";

SELECT COUNT(TRANSACTION_DATE) AS CURRENT_ITEMS_RECYCLED FROM RCMRECYCLE WHERE RCMID ="
+ rcmId +" AND Month(Start_Date) = Month(getdate()) AND Month(End_Date) = Month(getdate())";

SELECT COUNT(TRANSACTION_DATE) AS MONTHLY_ITEMS_RECYCLED FROM RCMRECYCLE WHERE RCMID ="
+ rcmId +" AND Month(Start_Date) = Month(getdate()) AND Month(End_Date) = Month(getdate())";

// new queries

SELECT RCMNUM, RCMID,  MONTHLYWEIGHT, LOCATION FROM RcmRecycle ORDER BY SUM(TRANSACTION_WEIGHT) DESC;

Select ITEMTYPE, ITEM_UNIT_WEIGHT, UNIT_PRICE FROM RECYCLEITEM;

INSERT INTO RECYCLEITEM(ITEMTYPE, ITEM_UNIT_WEIGHT,UNIT_PRICE) VALUES('itemType',itemWeightUnit ,'unitPrice');

Delete from  RECYCLEITEM where ITEMTYPE = itemType; 

Update RECYCLEITEM set UNIT_PRICE = unit_Price  where ITEMTYPE = itemType;

Select ITEMTYPE, ITEM_UNIT_WEIGHT, UNIT_PRICE FROM RECYCLEITEM;

SELECT COUNT(TRANSACTION_DATE) AS MONTHLY_ITEMS_RECYCLED WHERE DATE BETWEEN startDate AND endDate;

Create table TRANSACTION(TRANSNUM int(50) AUTO_INCREMENT PRIMARY KEY, RCMID varchar(50), ITEMTYPE varchar(50), TRANSACTION_WEIGHT double(10,2), TRANSACTION_AMOUNT double(10,2), TRANSACTION_DATE CURRENT_TIMESTAMP, TRANSACTIOn_COUPON double(10,2));

Insert into TRANSACTION (rcmid, itemType, transaction_weight, transaction_amount, transaction_coupon) VALUES('rcmid','itemType',transweight,transamount,0);

Insert into TRANSACTION (rcmid, itemType, transaction_weight, transaction_amount, transaction_coupon) VALUES('rcmid','itemType',transweight,0,transcoupon);

______________________________________________________________________________________________________
CREATE TABLE USER (USERNAME varchar(50) NOT NULL,PASSWORD varchar(50) NOT NULL,PRIMARY KEY (USERNAME));
 	INSERT INTO USER(USERNAME,PASSWORD)VALUES ('admin','admin123');

 CREATE TABLE RMOS (RMOSID varchar(50) NOT NULL, PRIMARY KEY (RMOSID));
 	INSERT INTO RMOS (RMOSID) VALUES ('M004');

 CREATE TABLE RCMRecycle(RCMID INT(50) NOT NULL AUTO_INCREMENT,RMOSID VARCHAR(50), LOCATION VARCHAR (50),
 STATUS VARCHAR (50),CURRENT_WEIGHT DOUBLE(50,2), AVAILABLE_CASH DOUBLE(50,2), AVAILABLE_COUPON DOUBLE(50,2),
 LAST_EMPTIED DATE, PRIMARY KEY(RCMID), FOREIGN KEY (RMOSID) REFERENCES RMOS (RMOSID));

 	alter table RCMRecycle add constraint ck_STATUS  check (STATUS in ('ACTIVE', 'DEACTIVE'));
 	
	INSERT INTO RCMRecycle (RMOSID , LOCATION ,STATUS ,CURRENT_WEIGHT , AVAILABLE_CASH, AVAILABLE_COUPON,
 	LAST_EMPTIED) VALUES ('M001','SAN JOSE','ACTIVE',40,100,50,'2015-10-11');


 CREATE TABLE RMOS_USER_MAPPING(USERNAME VARCHAR(50) NOT NULL ,RMOSID VARCHAR(50));
 	INSERT INTO RMOS_USER_MAPPING(USERNAME,RMOSID)VALUES ('ADMIN','M004');

 Create table TRANSACTION(TRANSNUM int(50) AUTO_INCREMENT PRIMARY KEY, RCMID varchar(50),
 ITEMTYPE varchar(50),TRANSACTION_WEIGHT double(10,2), TRANSACTION_AMOUNT double(10,2),
 TRANSACTION_DATE DATE,TRANSACTION_COUPON double(10,2));
	INSERT INTO TRANSACTION(RCMID,ITEMTYPE,TRANSACTION_WEIGHT,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_COUPON)
	VALUES (1,'CARTONS AND JUICE BOXEX  ',10,0,'2015-11-09',4);
 
 CREATE TABLE RECYCLEITEM(ITEMID INT(11) NOT NULL AUTO_INCREMENT,ITEMTYPE VARCHAR (50),
ITEM_UNIT_WEIGHT DOUBLE(50,5), UNIT_PRICE DOUBLE(50,5),PRIMARY KEY(ITEMID));
 	INSERT INTO RECYCLEITEM(ITEMTYPE,ITEM_UNIT_WEIGHT,UNIT_PRICE)
 	VALUES ('CARTONS AND JUICE BOXES',6,6);

CREATE TABLE EVENTS(ID INT NOT NULL AUTO_INCREMENT,RCMID INT,EVENT VARCHAR(255),DETAILS VARCHAR(255),
primary key (ID));
	INSERT INTO EVENTS(RCMID,EVENT,DETAILS)VALUES (2,'FILLED75P','About to reach threshold');
	
	SELECT RCMID,MAX(counted) FROM
(
    SELECT RCMID,COUNT(*) AS counted
    FROM TRANSACTION
    GROUP BY RCMID
) AS counts;
